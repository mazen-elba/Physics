# When a body travels in a straight line (a = delta(v)/delta(t))
# ... acceleration is rate of change in speed
# ... acceleration is change in velocity divided by elapsed time
# When a body travels along a curved path (a = v^2/r)
# ... acceleration depends on velocity and radius of curvature

# --- Units of Acceleration: 1 m/s^2 = g/10 -- #


def accelerationStraightPath(initialVelocity, finalVelocity, initialTime, finalTime):
    changeInSpeed = finalVelocity - initialVelocity
    elapsedTime = finalTime - initialTime

    acceleration = changeInSpeed / elapsedTime

    return str(acceleration) + " meters/seconds^2" + " or " + str(acceleration/10) + " grams."


def accelerationCurvedPath(velocity, curvatureRadius):

    acceleration = velocity**2 / curvatureRadius

    return str(acceleration) + " meters/seconds^2" + " or " + str(acceleration/10) + " grams."


# --- Test Cases Driver Program --- #
if __name__ == "__main__":
    initialVelocity = int(input(
        "Input a starting velocity (meters/second^2): "))
    finalVelocity = int(
        input("Input a final velocity (meters/second^2): "))
    initialTime = int(input("Input a starting time (seconds): "))
    finalTime = int(input("Input a final time (seconds): "))
    velocity = int(input("Input a velocity (meters/second^2): "))
    curvatureRadius = int(
        input("Input a curvature radius (meters): "))

    print(accelerationStraightPath(initialVelocity,
                                   finalVelocity, initialTime, finalTime))
    print(accelerationCurvedPath(velocity, curvatureRadius))
